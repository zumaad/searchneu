{
  "name": "searchneu",
  "version": "1.0.9",
  "scripts": {
    "-development-": "--------development--------",
    "start": "./node_modules/.bin/cross-env NODE_ENV=dev babel-node backend/server.js",
    "scrape": "babel-node --max_old_space_size=12000 backend/scrapers/main.js",
    "scrape_classes": "babel-node --max_old_space_size=12000 backend/scrapers/classes/main.js",
    "fetch": "./scripts/load_data.sh",
    "index": "babel-node backend/scrapers/classes/searchIndex.js; babel-node backend/scrapers/employees/searchIndex.js",
    "store": "babel-node backend/dumpProcessor.js",
    "script": "cd $INIT_CWD; babel-node --root-mode upward --ignore \".this_does_not_exit\"",
    "inspect": "cd $INIT_CWD;echo 'Open chrome://inspect in chrome and hit the node button';npm run -s script -- --inspect-brk",
    "profile": "yarn run build_backend && mkdir -p cache && time env NODE_ENV=prod node --heap-prof --heap-prof-dir=cache --max_old_space_size=12000 dist/backend/scrapers/classes/parsersxe/startup.js",
    "dev_migrate": "npx sequelize-cli --env dev db:migrate",
    "dev_undo": "npx sequelize-cli --env dev db:migrate:undo:all",
    "-linting-": "--------linting--------",
    "lintjs": "node ./node_modules/eslint/bin/eslint.js backend/ common/ frontend/",
    "fixjs": "node ./node_modules/eslint/bin/eslint.js backend/ common/ frontend/ --fix",
    "lintjsdiff": "node ./node_modules/eslint/bin/eslint.js $(git diff --diff-filter=AM --name-only HEAD | grep .js\\$)",
    "lintstyle": "./node_modules/.bin/stylelint \"frontend/**/*.scss\"",
    "fixstyle": "./node_modules/.bin/stylelint \"frontend/**/*.scss\" --fix",
    "lint": "npm run -s lintjs;npm run -s lintstyle",
    "fix": "npm run -s fixjs;npm run -s fixstyle",
    "-testing-": "--------testing--------",
    "test": "./node_modules/jest-cli/bin/jest.js --testPathIgnorePatterns='(reg.js|seq.js)'",
    "regtest": "jest reg.js",
    "seqtest": "jest -i seq.js",
    "coverage": "./node_modules/jest-cli/bin/jest.js --coverage",
    "-building-": "--------building--------",
    "prod_migrate": "npx sequelize-cli --env prod db:migrate",
    "prod_undo": "npx sequelize-cli --env prod db:migrate:undo:all",
    "build_frontend": "mkdir -p public; cp frontend/static/* public/; ./node_modules/.bin/cross-env NODE_ENV=prod babel-node ./node_modules/webpack/bin/webpack.js --config ./backend/webpack.config.babel.js --colors",
    "build_backend": "mkdir -p dist; mkdir -p dist/backend; ./node_modules/@babel/cli/bin/babel.js backend -d dist/backend --copy-files; ./node_modules/@babel/cli/bin/babel.js common -d dist/common",
    "build": "npm run -s build_backend; npm run -s build_frontend",
    "-deployment-": "--------deployment--------",
    "stop_prod": "./node_modules/forever/bin/forever stopall",
    "start_prod": "npm run -s stop_prod; NODE_ENV=prod ./node_modules/forever/bin/forever -a -l forever.log -o log.log -e error.log start dist/backend/startup.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sandboxnu/searchneu.git"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "useBuiltIns": "entry",
          "corejs": "^3.0.1",
          "targets": {
            "browsers": [
              "> 0.25%",
              "not dead"
            ],
            "node": "current"
          }
        }
      ],
      "@babel/preset-react"
    ],
    "plugins": [
      "@babel/plugin-proposal-class-properties",
      "react-hot-loader/babel"
    ],
    "ignore": [
      "node_modules"
    ]
  },
  "stylelint": {
    "extends": "stylelint-config-standard"
  },
  "main": "dist/backend/scrapers/main.js",
  "_comment": "domutils upgrade is faster for parsing html (stack instead of recursive) but requires some code changes. Shoudn't be too bad.",
  "_comment2": "Async adds about 30k to the final bundled output. There are smaller libraries that can also do async.retry (only thing that is being used in async)",
  "_comment3": "but that is only about 3% of the final JS size.",
  "dependencies": {
    "@babel/plugin-transform-arrow-functions": "^7.2.0",
    "@babel/register": "^7.0.0",
    "@elastic/elasticsearch": "^7.0.0-rc.2",
    "amplitude": "^4.0.0",
    "apollo-server": "^2.9.5",
    "apollo-server-express": "^2.9.7",
    "apollo-server-testing": "^2.9.6",
    "async": "^2",
    "atob": "^2.0.3",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^24.8.0",
    "body-parser": "^1.17.2",
    "cheerio": "^0.22.0",
    "classnames": "^2.2.5",
    "compression": "^1.6.2",
    "cookie": "^0.4.0",
    "core-js": "^3.0.1",
    "coveralls": "^3.0.6",
    "cross-env": "^5.0.0",
    "dnscache": "^1.0.1",
    "domutils": "^1.6.2",
    "dotenv": "^8.2.0",
    "enzyme": "^3.2.0",
    "enzyme-adapter-react-16": "^1.1.0",
    "enzyme-to-json": "^3.3.5",
    "eslint-loader": "^2.0.0",
    "express": "^4.15.2",
    "express-async-wrap": "^1.0.0",
    "express-x-hub": "^1.0.4",
    "file-loader": "^4.0.0",
    "firebase-admin": "^8.2.0",
    "forever": "^1.0.0",
    "form-urlencoded": "^4.0.0",
    "friendly-errors-webpack-plugin": "^1.7.0",
    "fs-extra": "^8.0.0",
    "graphql-type-json": "^0.3.0",
    "he": "^1.2.0",
    "html-webpack-plugin": "^3.0.6",
    "htmlparser2": "^3",
    "identity-obj-proxy": "^3.0.0",
    "is-mobile": "^2.0.0",
    "jest": "^24.8.0",
    "jsdom": "^15.0.0",
    "json": "^9.0.6",
    "lodash": "^4.17.4",
    "mkdirp-promise": "^5.0.1",
    "mock-local-storage": "^1.0.5",
    "mockdate": "^2.0.1",
    "moment": "^2.19.3",
    "msgpack5": "^4.0.0",
    "node-notifier": "^5.2.1",
    "object-hash": "^1.1.7",
    "pg": "^7.12.1",
    "pg-hstore": "^2.3.3",
    "prop-types": "^15.5.8",
    "randomstring": "^1.1.5",
    "react": "^16.1.1",
    "react-collapsible": "^2.6.0",
    "react-dom": "^16.1.1",
    "react-hot-loader": "^4.0.0",
    "react-test-renderer": "^16.1.1",
    "react-tooltip": "^3.2.6",
    "react-transition-group": "^4.0.1",
    "regenerator-runtime": "^0.13.2",
    "request": "^2.81.0",
    "request-promise-native": "^1.0.3",
    "resolve-url-loader": "^3.0.0",
    "rollbar": "^2.1.3",
    "semantic-ui-css": "^2.2.4",
    "semantic-ui-react": "^0.87.1",
    "sequelize": "^5.21.2",
    "sequelize-cli": "^5.5.1",
    "strip-ansi": "^5.0.0",
    "stylelint": "^10.0.1",
    "stylelint-config-standard": "^18.2.0",
    "urijs": "^1.18.8",
    "webpack": "^4.1.0",
    "webpack-cli": "^3.0.1",
    "webpack-dev-middleware": "^3.0.1",
    "webpack-hot-middleware": "^2.16.1",
    "whois": "^2.3.9",
    "xmldom": "^0.1.27"
  },
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.2.2",
    "@babel/node": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.0.0",
    "@babel/plugin-proposal-decorators": "^7.0.0",
    "@babel/plugin-proposal-do-expressions": "^7.0.0",
    "@babel/plugin-proposal-export-default-from": "^7.0.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.0.0",
    "@babel/plugin-proposal-function-sent": "^7.0.0",
    "@babel/plugin-proposal-json-strings": "^7.0.0",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.0.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
    "@babel/plugin-proposal-numeric-separator": "^7.0.0",
    "@babel/plugin-proposal-optional-chaining": "^7.0.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.0.0",
    "@babel/plugin-proposal-throw-expressions": "^7.0.0",
    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
    "@babel/plugin-syntax-import-meta": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/runtime": "^7.0.0",
    "babel-eslint": "^10.0.1",
    "babel-loader": "^8.0.4",
    "css-loader": "^3.0.0",
    "eslint": "^6.0.1",
    "eslint-config-airbnb": "^18.0.0",
    "eslint-plugin-babel": "^5.1.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-react": "^7.0.1",
    "ignore-styles": "^5.0.1",
    "node-sass": "^4.9.2",
    "sass-loader": "^7.0.1",
    "style-loader": "^1.0.0"
  },
  "jest": {
    "snapshotSerializers": [
      "enzyme-to-json/serializer"
    ],
    "testURL": "http://localhost/",
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/"
    ],
    "setupFiles": [
      "./common/jestSetupFile.js"
    ],
    "moduleFileExtensions": ["js", "jsx", "json", "node", "seq.js"],
    "testMatch": [
    "**/__tests__/**/*.[jt]s?(x)", 
    "**/?(*.)+(spec|test)?(.(seq|reg)).[jt]s?(x)"
    ],
    "moduleNameMapper": {
      "__comment": "The css import needs to be an object that returns a string",
      "__comment2": "but the svg and png imports need to be string themselves.",
      "\\.(css|less|scss)$": "identity-obj-proxy",
      "\\.(svg|png)$": "<rootDir>/frontend/components/tests/exportsAString.js"
    }
  }
}
